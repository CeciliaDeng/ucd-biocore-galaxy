<tool name="Sort Sam" id="picard_SortSam" version="1.56.0">
  <requirements><requirement type="package">picard</requirement></requirements>
  <command interpreter="python">
    picard_wrapper.py
      --input "$inputFile"
      -s "$sort_order"
      -o "$outFile"
      --output-format $outputFormat
      -j "${GALAXY_DATA_INDEX_DIR}/shared/jars/picard/SortSam.jar"
  </command>
  <inputs>
    <param format="bam,sam" name="inputFile" type="data" label="SAM/BAM dataset to be sorted"
      help="If empty, upload or import a SAM/BAM dataset." />
    <param name="sort_order" type="select" label="Sort order">
      <option value="coordinate" selected="True">coordinate</option>
      <option value="queryname">queryname</option>
      <option value="unsorted">unsorted</option>
    </param>
    <param name="outputFormat" type="boolean" checked="True" truevalue="bam" falsevalue="sam" label="Output BAM instead of SAM" help="Uncheck for SAM output" />
  </inputs>
  <outputs>
    <data name="outFile" format="bam" label="${tool.name} on ${on_string}: ${outputFormat}" />
      <change_format>
        <when input="outputFormat" value="sam" format="sam" />
      </change_format>
  </outputs>
  <tests>
    <test>
      <!-- Command:
      java -jar ReplaceSamHeader.jar VALIDATION_STRINGENCY=LENIENT I=test-data/picard_input_tiny_coord.bam HEADER=test-data/picard_RSH_input1.bam O=picard_RSH_output1.sam
      picard_RSH_input1.bam can be made from picard_RSH_input1.sam
      -->
      <param name="inputFile" value="picard_input_tiny_coord.bam" ftype="bam" />
      <param name="headerFile" value="picard_RSH_input1.bam" ftype="bam" />
      <param name="outputFormat" value="False" />
      <output name="outFile" file="picard_RSH_output1.sam" ftype="sam" />
    </test>
    <test>
      <!-- Command:
      java -jar ReplaceSamHeader.jar VALIDATION_STRINGENCY=LENIENT I=test-data/picard_input_tiny_coord.sam HEADER=test-data/picard_RSH_input1.bam O=picard_RSH_output2.sam
      picard_RSH_input1.bam can be made from picard_RSH_input1.sam
      -->
      <param name="inputFile" value="picard_input_tiny_coord.sam" ftype="sam" />
      <param name="headerFile" value="picard_RSH_input1.bam" ftype="bam" />
      <param name="outputFormat" value="False" />
      <output name="outFile" file="picard_RSH_output2.sam" ftype="sam" />
    </test>
    <test>
      <!-- Command:
      java -jar ReplaceSamHeader.jar VALIDATION_STRINGENCY=LENIENT I=test-data/picard_input_tiny_coord.sam HEADER=test-data/picard_RSH_input1.sam O=picard_RSH_output2.bam
      -->
      <param name="inputFile" value="picard_input_tiny_coord.sam" ftype="sam" />
      <param name="headerFile" value="picard_RSH_input1.sam" ftype="sam" />
      <param name="outputFormat" value="True" />
      <output name="outFile" file="picard_RSH_output2.bam" ftype="bam" />
    </test>
  </tests>
  <help>


.. class:: infomark

**Purpose**

Read SAM and perform various fix-ups. Currently, the only fix-up it to soft-clip an alignment that hangs off the end of its reference sequence.

**Picard documentation**

This is a Galaxy wrapper for CleanSam, a part of the external package Picard-tools_.

 .. _Picard-tools: http://www.google.com/search?q=picard+samtools

**Useful for paired data only**

Likely won't do anything helpful for single end sequence data
Currently, Galaxy doesn't distinguish paired from single ended SAM/BAM so make sure
the data you choose are valid (paired end) SAM or BAM data - unless you trust this
tool not to harm your data.

-----

.. class:: infomark

**Syntax**

- **Input** - a paired read sam/bam format aligned short read data in your current history
- **Sort order** - can be used to adjust the ordering of readsÂ·
- **Title** - the title to use for all output files from this job - use it for high level metadata
- **Output Format** - either SAM or compressed as BAM

-----

.. class:: infomark

**Inputs, outputs, and parameters**

.. csv-table::

   :header-rows: 1

  Option,Description
  "INPUT=File","The input file to fix. This option may be specified 0 or more times."
  "OUTPUT=File","The output file to write to"
  "SORT_ORDER=SortOrder","Optional sort order if the OUTPUT file should be sorted differently than the INPUT file. Default value: null. Possible values: {unso
  "CREATE_MD5_FILE=Boolean","Whether to create an MD5 digest for any BAM files created. Default value: false"

.. class:: warningmark

**Warning on SAM/BAM quality**

Many SAM/BAM files produced externally and uploaded to Galaxy do not fully conform to SAM/BAM specifications. Galaxy deals with this by using the **LENIENT**
flag when it runs Picard, which allows reads to be discarded if they're empty or don't map. This appears
to be the only way to deal with SAM/BAM that cannot be parsed.


  </help>
</tool>












